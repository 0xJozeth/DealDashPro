// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

// generator erd {
//   provider = "prisma-erd-generator"
// }

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id    String @id @default(cuid()) // matches up with the kinde user id
  email String @unique

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  favorites Favorite[]
}

model Favorite {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])

  propertyId String
  property   Property @relation(fields: [propertyId], references: [id])

  @@unique([userId, propertyId])
  @@index([propertyId])
}

model Property {
  id      String  @id @default(cuid())
  url     String? @unique @default(cuid())
  heading String

  imgSrc     String?
  imgWidth   Int?
  imgHeight  Int?
  imgAlt     String?
  cn         String?
  views      Int?
  popularity EnumPopularity?

  desc        String?
  streetView  String?
  mapLocation String?

  askPrice String?
  arv      String?
  address1 String?
  address2 String?
  city     String?
  state    String?
  county   String?
  zip      String?
  beds     Int?
  baths    Int?
  sqft     Int?

  type      String?
  parking   String?
  yearBuilt Int?
  lotSize   Int?

  listedAt  String // Timestamp when the property was listed
  createdAt DateTime @default(now()) // Timestamp when the property was created
  updatedAt DateTime @updatedAt // Timestamp when the property was updated

  favorites Favorite[]
}

enum EnumStatus {
  Accepted
  Pending
  Denied
}

enum EnumPopularity {
  NewHome
  HotHome
  ShortSale
  Pending
  Sold
  OffMarket
}

enum EnumFavoriteCategory {
  NeedsRehab
  LightRenovation
}
